steps:
  - pwsh: |
      $organizationUri = [uri] $Env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI
      if ($organizationUri.AbsolutePath -notmatch "^/(?<Organization>[^/]+)/") {
        throw "Unable to get organization name: $organizationUri."
      }
      $uri = "https://extmgmt.dev.azure.com/{0}/_apis/extensionmanagement/installedextensionsbyname/{1}/{2}?api-version=6.0-preview.1" -f $Matches.Organization, $Env:EXTENSION_PUBLISHERID, $Env:EXTENSION_ID
      "Uri: $uri"
      $headers = @{ Authorization = "Bearer $Env:AccessToken"}
      $buildNumber = $Env:BUILD_BUILDNUMBER -as [version]
      "Waiting for version: $buildNumber..."
      while ($true) {
        $result = Invoke-RestMethod -Uri $uri -UseBasicParsing -Headers $headers -ContentType 'application/json'
        $result | Format-List
        $version = $result.version -as [version]
        if ($version -eq $buildNumber) {
          "Extension is up-to-date: $version"
          return
        }
        if ($version -gt $buildNumber) {
          "##vso[task.logissue type=warning]Extension is more recent than expected: $version"
          return
        }
        "Current version: $version..."
        Start-Sleep 10
      }
    displayName: Wait
    timeoutInMinutes: 10
    env:
      AccessToken: $(system.accessToken)
